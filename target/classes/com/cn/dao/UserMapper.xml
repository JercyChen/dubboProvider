<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.cn.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="last_login_time" property="lastLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="user_status" property="userStatus" jdbcType="INTEGER" />
		<result column="user_type_code" property="userTypeCode"
			jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="userResultMap" type="com.cn.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="last_login_time" property="lastLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="user_status" property="userStatus" jdbcType="INTEGER" />
		<result column="user_type_code" property="userTypeCode"
			jdbcType="INTEGER" />

		<collection property="mobiles" ofType="Mobile" column="userid">
			<id property="id" column="mid" javaType="int" jdbcType="INTEGER" />
			<result property="phonenumber" column="phonenumber" javaType="string"
				jdbcType="VARCHAR" />
		</collection>
	</resultMap>


	<sql id="Base_Column_List">
		id, user_id, user_name, user_phone, user_password,
		last_login_time,
		user_status,
		user_type_code
	</sql>
	<!-- 查询单个用户(通过用户名和密码) -->
	<select id="selectOneUser" resultMap="BaseResultMap">
		select * from user_login
		where user_name = #{userName,jdbcType=VARCHAR} and
		user_password=#{userPass,jdbcType=VARCHAR}
	</select>

	<!-- 查询所有用户 -->
	<select id="selectAllUsers" resultMap="BaseResultMap">
		select * from user_login
	</select>

	<!--多表查询操作 -->
	<select id="selectUser" parameterType="int" resultMap="userResultMap">
		<!--分别为mobile的主键id与user的主键id赋值别名,避免因为两个表字段名称相同而注入到对应对象名称冲突 -->
		select m.*,u.* from user_mobile
		m,user_login u where m.userid = u.user_id and u.id = #{id}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_login
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		user_login
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<!-- 批量删除 -->
	<delete id="deleteUsersByUserIds" parameterType="java.util.List">
		delete from user_login where id in
		<foreach collection="userIds" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<insert id="insert" parameterType="com.cn.model.User"
		useGeneratedKeys="true" keyProperty="id">
		insert into user_login (id,
		user_id, user_name,
		user_phone, user_password, last_login_time,
		user_status, user_type_code)
		values (#{id,jdbcType=INTEGER},
		#{userId,jdbcType=INTEGER},
		#{userName,jdbcType=VARCHAR},
		#{userPhone,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
		#{lastLoginTime,jdbcType=TIMESTAMP},
		#{userStatus,jdbcType=INTEGER},
		#{userTypeCode,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.cn.model.User">
		insert into user_login
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userPhone != null">
				user_phone,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="userStatus != null">
				user_status,
			</if>
			<if test="userTypeCode != null">
				user_type_code,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				#{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userStatus != null">
				#{userStatus,jdbcType=INTEGER},
			</if>
			<if test="userTypeCode != null">
				#{userTypeCode,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cn.model.User">
		update user_login
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPhone != null">
				user_phone = #{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=INTEGER},
			</if>
			<if test="userTypeCode != null">
				user_type_code = #{userTypeCode,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cn.model.User">
		update user_login
		set user_id = #{userId,jdbcType=INTEGER},
		user_name =
		#{userName,jdbcType=VARCHAR},
		user_phone =
		#{userPhone,jdbcType=VARCHAR},
		user_password =
		#{userPassword,jdbcType=VARCHAR},
		last_login_time =
		#{lastLoginTime,jdbcType=TIMESTAMP},
		user_status =
		#{userStatus,jdbcType=INTEGER},
		user_type_code =
		#{userTypeCode,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>